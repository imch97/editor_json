{"version":3,"sources":["components/Field/Field.jsx","components/Editor/Editor.jsx","components/InputJsonFile/InputJsonFile.jsx","components/containers/JsonEditor/JsonEditor.jsx","App.js","index.js"],"names":["Field","fieldKey","value","useState","key","valueField","setValueField","className","classNames","item","item_key","item_value","onChange","e","event","content","target","handleChange","getFiniteValue","obj","mas","getProp","o","prop","push","Editor","file","fileParse","setFileParse","useEffect","Promise","resolve","reject","reader","FileReader","readAsText","onload","JSON","parse","result","then","editor","editor_menu","contentEditable","map","el","index","InputJsonFile","files","setFile","input_file","type","formData","FormData","append","fi","get","JsonEditor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAwCeA,EAnCD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAAY,EAChBC,mBAASF,GADO,mBAC/BG,EAD+B,aAEFD,mBAASD,GAAS,KAFhB,mBAE/BG,EAF+B,KAEnBC,EAFmB,KAetC,OACC,sBAAKC,UAAWC,IAAW,CAAEC,MAAM,IAAnC,UACC,sBAAKF,UAAWC,IAAW,CAAEE,UAAU,IAAvC,UAAiDN,EAAjD,OAUA,uBACCG,UAAWC,IAAW,CAAEG,YAAY,IACpCT,MAAOG,EACPO,SAAU,SAACC,GAAD,OA1BQ,SAACC,GACrB,IAAMC,EAAUD,EAAME,OAAOd,MAC7BI,EAAcS,GAwBKE,CAAaJ,UC3B5BK,EAAiB,SAACC,GACvB,IAAIC,EAAM,GAiBV,OAfgB,SAAVC,EAAWC,GAChB,IAAK,IAAIC,KAAQD,EACO,kBAAZA,EAAEC,IACZH,EAAII,KAAK,CAACD,EAAM,OAEhBF,EAAQC,EAAEC,KAIVH,EAAII,KAAK,CAACD,EAAMD,EAAEC,KAKrBF,CAAQF,GACDC,GAyCOK,EAtCA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACMvB,qBADN,mBACrBwB,EADqB,KACVC,EADU,KAoB5B,OAjBAC,qBAAU,WACI,IAAIC,SAAQ,SAACC,EAASC,GAClC,IAAIC,EAAS,IAAIC,WAEjBD,EAAOE,WAAWT,GAElBO,EAAOG,OAAS,WACfL,EAAQM,KAAKC,MAAML,EAAOM,aAIzBC,MAAK,SAACD,GACRX,EAAaW,QAGZ,CAACb,IAGH,sBAAKnB,UAAWC,IAAW,CAAEiC,QAAQ,IAArC,UACC,qBAAKlC,UAAWC,IAAW,CAAEkC,aAAa,IAASC,gBAAgB,GAAnE,kBAIChB,GACAT,EAAeS,GAAWiB,KAAI,SAACC,EAAIC,GAAL,OAC7B,cAAC,EAAD,CAEC7C,SAAU4C,EAAG,GACb3C,MAAO2C,EAAG,IAHX,UACSA,EAAG,GADZ,YACkBA,EAAG,GADrB,cAC6BC,W,wBC7BnBC,EAxBO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACZ7C,qBADY,mBAC7BuB,EAD6B,KACvBuB,EADuB,KAkBpC,OAJApB,qBAAU,WACTmB,EAAMtB,KACJ,CAACsB,EAAOtB,IAGV,qBAAKnB,UAAWC,IAAW,CAAE0C,YAAY,IAAzC,SACC,uBAAOC,KAAK,OAAOvC,SAAU,SAACC,GAAD,OAjBV,SAACC,GAErB,IAAIsC,EAAW,IAAIC,IACnBD,EAASE,OAAO,OAAQxC,EAAME,OAAOgC,MAAM,IAC3C,IAAMO,EAAKH,EAASI,IAAI,QAExBP,EAAQM,GAW6BtC,CAAaJ,SCPrC4C,G,MAVI,WAAO,IAAD,EACAtD,qBADA,mBACjBuB,EADiB,KACXuB,EADW,KAExB,OACC,sBAAK1C,UAAWC,IAAW,CAAEiD,YAAY,IAAzC,UACC,cAAC,EAAD,CAAeT,MAAOC,IAErBvB,GAAQ,cAAC,EAAD,CAAQA,KAAMA,SCAXgC,MATf,WACC,OACC,sBAAKnD,UAAU,MAAf,UACC,6CACA,cAAC,EAAD,QCHHoD,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.af94d009.chunk.js","sourcesContent":["import './Field.sass'\nimport React from 'react'\nimport { useState, useEffect } from 'react'\nimport classNames from 'classnames'\n\nconst Field = ({ fieldKey, value }) => {\n\tconst [key, setKey] = useState(fieldKey)\n\tconst [valueField, setValueField] = useState(value || '')\n\n\tconst handleChange = (event) => {\n\t\tconst content = event.target.value\n\t\tsetValueField(content)\n\n\t\t// console.log(key, ' log', valueField)\n\t}\n\n\t// useEffect(() => {\n\t// \tconsole.log(key, ' eff', valueField)\n\t// }, [valueField])\n\n\treturn (\n\t\t<div className={classNames({ item: true })}>\n\t\t\t<div className={classNames({ item_key: true })}>{key}:</div>\n\t\t\t{/* <div\n\t\t\t\tclassName={classNames({ item_value: true })}\n\t\t\t\tcontentEditable={true}\n\t\t\t\tsuppressContentEditableWarning={true}\n\t\t\t\tonBlur={(e) => handleChange(e)}\n\t\t\t\tvalue={valueField}\n\t\t\t>\n\t\t\t\t{valueField == '' ? \"' '\" : valueField}\n\t\t\t</div> */}\n\t\t\t<input\n\t\t\t\tclassName={classNames({ item_value: true })}\n\t\t\t\tvalue={valueField}\n\t\t\t\tonChange={(e) => handleChange(e)}\n\t\t\t/>\n\t\t</div>\n\t)\n}\nexport default Field\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport classNames from 'classnames'\nimport './Editor.sass'\nimport Field from '../Field/Field.jsx'\n\n// TODO: contentEditable=\"true | false\" редактирование DIV элемента\n\nconst getFiniteValue = (obj) => {\n\tlet mas = []\n\tlet count = 0\n\tconst getProp = (o) => {\n\t\tfor (let prop in o) {\n\t\t\tif (typeof o[prop] === 'object') {\n\t\t\t\tmas.push([prop, null])\n\n\t\t\t\tgetProp(o[prop])\n\t\t\t} else {\n\t\t\t\t// console.log('Finite value: ', o[prop])\n\n\t\t\t\tmas.push([prop, o[prop]])\n\t\t\t}\n\t\t}\n\t}\n\n\tgetProp(obj)\n\treturn mas\n}\n\nconst Editor = ({ file }) => {\n\tconst [fileParse, setFileParse] = useState()\n\n\tuseEffect(() => {\n\t\tconst prom = new Promise((resolve, reject) => {\n\t\t\tlet reader = new FileReader()\n\n\t\t\treader.readAsText(file)\n\n\t\t\treader.onload = function () {\n\t\t\t\tresolve(JSON.parse(reader.result))\n\t\t\t}\n\n\t\t\t// return JSON.parse(reader.result)\n\t\t}).then((result) => {\n\t\t\tsetFileParse(result)\n\t\t\t// console.log(fileParse)\n\t\t})\n\t}, [file])\n\n\treturn (\n\t\t<div className={classNames({ editor: true })}>\n\t\t\t<div className={classNames({ editor_menu: true })} contentEditable=\"\">\n\t\t\t\tMENU\n\t\t\t</div>\n\n\t\t\t{fileParse &&\n\t\t\t\tgetFiniteValue(fileParse).map((el, index) => (\n\t\t\t\t\t<Field\n\t\t\t\t\t\tkey={`${el[0]}:${el[1]} + ${index}`}\n\t\t\t\t\t\tfieldKey={el[0]}\n\t\t\t\t\t\tvalue={el[1]}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default Editor\n","import './InputJsonFile.sass'\nimport { useState, useEffect } from 'react'\nimport classNames from 'classnames'\nimport FormData from 'form-data'\n\nconst InputJsonFile = ({ files }) => {\n\tconst [file, setFile] = useState()\n\n\tconst handleChange = (event) => {\n\t\t// setFile(event.target.files[0])\n\t\tlet formData = new FormData()\n\t\tformData.append('file', event.target.files[0])\n\t\tconst fi = formData.get('file')\n\t\t// fileRead(fi)\n\t\tsetFile(fi)\n\n\t\t// setHaveJson(true)\n\t}\n\n\tuseEffect(() => {\n\t\tfiles(file)\n\t}, [files, file])\n\n\treturn (\n\t\t<div className={classNames({ input_file: true })}>\n\t\t\t<input type=\"file\" onChange={(e) => handleChange(e)} />\n\t\t</div>\n\t)\n}\nexport default InputJsonFile\n","import React from 'react'\nimport { useState } from 'react'\nimport './JsonEditor.sass'\nimport Editor from '../../Editor/Editor.jsx'\nimport InputJsonFile from '../../InputJsonFile/InputJsonFile.jsx'\n\nimport classNames from 'classnames'\n\nconst JsonEditor = () => {\n\tconst [file, setFile] = useState()\n\treturn (\n\t\t<div className={classNames({ JsonEditor: true })}>\n\t\t\t<InputJsonFile files={setFile} />\n\n\t\t\t{file && <Editor file={file} />}\n\t\t</div>\n\t)\n}\nexport default JsonEditor\n","import './App.sass'\nimport Editor from './components/Editor/Editor.jsx'\nimport InputJsonFile from './components/InputJsonFile/InputJsonFile.jsx'\nimport JsonEditor from './components/containers/JsonEditor/JsonEditor.jsx'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>JSON Editor</h1>\n\t\t\t<JsonEditor />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.sass'\nimport App from './App.js'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}