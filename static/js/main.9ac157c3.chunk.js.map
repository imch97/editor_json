{"version":3,"sources":["components/Field/Field.jsx","components/Editor/Editor.jsx","components/InputJsonFile/InputJsonFile.jsx","components/containers/JsonEditor/JsonEditor.jsx","App.js","index.js"],"names":["Field","fieldKey","value","useState","key","valueField","setValueField","className","classNames","item","item_key","item_value","contentEditable","suppressContentEditableWarning","onClick","e","event","content","target","textContent","console","log","handleChange","Editor","file","fileParse","setFileParse","useEffect","Promise","resolve","reject","reader","FileReader","readAsText","onload","JSON","parse","result","then","editor","editor_menu","Object","keys","map","el","InputJsonFile","files","setFile","input_file","type","onChange","formData","FormData","append","fi","get","JsonEditor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUA8BeA,EAzBD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAAY,EAChBC,mBAASF,GADO,mBAC/BG,EAD+B,aAEFD,mBAASD,IAFP,mBAE/BG,EAF+B,KAEnBC,EAFmB,KAUtC,OACC,sBAAKC,UAAWC,IAAW,CAAEC,MAAM,IAAnC,UACC,sBAAKF,UAAWC,IAAW,CAAEE,UAAU,IAAvC,UAAiDN,EAAjD,OACA,qBACCG,UAAWC,IAAW,CAAEG,YAAY,IACpCC,gBAAgB,OAChBC,+BAA+B,OAC/BC,QAAS,SAACC,GAAD,OAbS,SAACC,GACrB,IAAMC,EAAUD,EAAME,OAAOC,YAC7Bb,EAAcW,GACdG,QAAQC,IAAIhB,GAUMiB,CAAaP,IAC7Bb,MAAOG,EALR,SAOEA,QCgBUkB,EAjCA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACMrB,qBADN,mBACrBsB,EADqB,KACVC,EADU,KAmB5B,OAhBAC,qBAAU,WACI,IAAIC,SAAQ,SAACC,EAASC,GAClC,IAAIC,EAAS,IAAIC,WAEjBD,EAAOE,WAAWT,GAElBO,EAAOG,OAAS,WACfL,EAAQM,KAAKC,MAAML,EAAOM,aAIzBC,MAAK,SAACD,GACRX,EAAaW,QAEZ,CAACb,IAGH,sBAAKjB,UAAWC,IAAW,CAAE+B,QAAQ,IAArC,UACC,qBAAKhC,UAAWC,IAAW,CAAEgC,aAAa,IAAS5B,gBAAgB,GAAnE,kBAICa,GACAgB,OAAOC,KAAKjB,GAAWkB,KAAI,SAACC,GAAD,OAC1B,cAAC,EAAD,CAAgB3C,SAAU2C,EAAI1C,MAAOuB,EAAUmB,IAAnCA,U,wBCNFC,EAxBO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACZ3C,qBADY,mBAC7BqB,EAD6B,KACvBuB,EADuB,KAkBpC,OAJApB,qBAAU,WACTmB,EAAMtB,KACJ,CAACsB,EAAOtB,IAGV,qBAAKjB,UAAWC,IAAW,CAAEwC,YAAY,IAAzC,SACC,uBAAOC,KAAK,OAAOC,SAAU,SAACnC,GAAD,OAjBV,SAACC,GAErB,IAAImC,EAAW,IAAIC,IACnBD,EAASE,OAAO,OAAQrC,EAAME,OAAO4B,MAAM,IAC3C,IAAMQ,EAAKH,EAASI,IAAI,QAExBR,EAAQO,GAW6BhC,CAAaP,SCPrCyC,G,MAVI,WAAO,IAAD,EACArD,qBADA,mBACjBqB,EADiB,KACXuB,EADW,KAExB,OACC,sBAAKxC,UAAWC,IAAW,CAAEgD,YAAY,IAAzC,UACC,cAAC,EAAD,CAAeV,MAAOC,IAErBvB,GAAQ,cAAC,EAAD,CAAQA,KAAMA,SCAXiC,MATf,WACC,OACC,sBAAKlD,UAAU,MAAf,UACC,6CACA,cAAC,EAAD,QCHHmD,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.9ac157c3.chunk.js","sourcesContent":["import './Field.sass'\nimport React from 'react'\nimport { useState, useEffect } from 'react'\nimport classNames from 'classnames'\n\nconst Field = ({ fieldKey, value }) => {\n\tconst [key, setKey] = useState(fieldKey)\n\tconst [valueField, setValueField] = useState(value)\n\n\tconst handleChange = (event) => {\n\t\tconst content = event.target.textContent\n\t\tsetValueField(content)\n\t\tconsole.log(valueField)\n\t}\n\n\treturn (\n\t\t<div className={classNames({ item: true })}>\n\t\t\t<div className={classNames({ item_key: true })}>{key}:</div>\n\t\t\t<div\n\t\t\t\tclassName={classNames({ item_value: true })}\n\t\t\t\tcontentEditable=\"true\"\n\t\t\t\tsuppressContentEditableWarning=\"true\"\n\t\t\t\tonClick={(e) => handleChange(e)}\n\t\t\t\tvalue={valueField}\n\t\t\t>\n\t\t\t\t{valueField}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\nexport default Field\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport classNames from 'classnames'\nimport './Editor.sass'\nimport Field from '../Field/Field.jsx'\n\n// TODO: contentEditable=\"true | false\" редактирование DIV элемента\n\nconst Editor = ({ file }) => {\n\tconst [fileParse, setFileParse] = useState()\n\n\tuseEffect(() => {\n\t\tconst prom = new Promise((resolve, reject) => {\n\t\t\tlet reader = new FileReader()\n\n\t\t\treader.readAsText(file)\n\n\t\t\treader.onload = function () {\n\t\t\t\tresolve(JSON.parse(reader.result))\n\t\t\t}\n\n\t\t\t// return JSON.parse(reader.result)\n\t\t}).then((result) => {\n\t\t\tsetFileParse(result)\n\t\t})\n\t}, [file])\n\n\treturn (\n\t\t<div className={classNames({ editor: true })}>\n\t\t\t<div className={classNames({ editor_menu: true })} contentEditable=\"\">\n\t\t\t\tMENU\n\t\t\t</div>\n\n\t\t\t{fileParse &&\n\t\t\t\tObject.keys(fileParse).map((el) => (\n\t\t\t\t\t<Field key={el} fieldKey={el} value={fileParse[el]} />\n\t\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default Editor\n","import './InputJsonFile.sass'\nimport { useState, useEffect } from 'react'\nimport classNames from 'classnames'\nimport FormData from 'form-data'\n\nconst InputJsonFile = ({ files }) => {\n\tconst [file, setFile] = useState()\n\n\tconst handleChange = (event) => {\n\t\t// setFile(event.target.files[0])\n\t\tlet formData = new FormData()\n\t\tformData.append('file', event.target.files[0])\n\t\tconst fi = formData.get('file')\n\t\t// fileRead(fi)\n\t\tsetFile(fi)\n\n\t\t// setHaveJson(true)\n\t}\n\n\tuseEffect(() => {\n\t\tfiles(file)\n\t}, [files, file])\n\n\treturn (\n\t\t<div className={classNames({ input_file: true })}>\n\t\t\t<input type=\"file\" onChange={(e) => handleChange(e)} />\n\t\t</div>\n\t)\n}\nexport default InputJsonFile\n","import React from 'react'\nimport { useState } from 'react'\nimport './JsonEditor.sass'\nimport Editor from '../../Editor/Editor.jsx'\nimport InputJsonFile from '../../InputJsonFile/InputJsonFile.jsx'\n\nimport classNames from 'classnames'\n\nconst JsonEditor = () => {\n\tconst [file, setFile] = useState()\n\treturn (\n\t\t<div className={classNames({ JsonEditor: true })}>\n\t\t\t<InputJsonFile files={setFile} />\n\n\t\t\t{file && <Editor file={file} />}\n\t\t</div>\n\t)\n}\nexport default JsonEditor\n","import './App.sass'\nimport Editor from './components/Editor/Editor.jsx'\nimport InputJsonFile from './components/InputJsonFile/InputJsonFile.jsx'\nimport JsonEditor from './components/containers/JsonEditor/JsonEditor.jsx'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>JSON Editor</h1>\n\t\t\t<JsonEditor />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.sass'\nimport App from './App.js'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}